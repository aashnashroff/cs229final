% 
%pre-processing to separate test and train
%use trials 1->150 for both types
XTrain1 = X(1:150,:);
XTrain2 = X(190:339,:);
XTest1 = X(151:189,:);
XTest2 = X(340:end,:);
yTrain1 = y(1,1:150);
yTrain2 = y(1,190:339);
yTest1 = y(1,151:189);
yTest2 = y(1,340:end);

XTrain = cat(1,XTrain1,XTrain2);
XTest = cat(1,XTest1,XTest2);
yTrain = cat(2, yTrain1,yTrain2);
yTest = cat(2, yTest1,yTest2);

perm = randperm(size(XTrain,1));
XTrain = XTrain(perm, :);
yTrain = yTrain';
yTrain = yTrain(perm, :);

maxIter = 100; %100000
learningRate = 0.1;
% 

[nsamples, nfeatures] = size(XTrain);
w0 = rand(nfeatures + 1, 1);
weight = logisticRegressionWeights( XTrain, yTrain, w0, maxIter, learningRate);
res = logisticRegressionClassify( XTest, weight );

errors = abs(yTest' - res);
err = sum(errors)
percentage = 1 - err / size(XTest, 1)

